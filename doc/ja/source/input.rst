入力ファイル
=====================

入力ファイルでは共通パラメータと、各探索手法固有のパラメータを指定します。
ファイル形式は ``TOML`` を採用しています。
入力ファイルは[``base``], [``solver``], [``algorithm``]の3つのセクションから構成されます。
[``solver``], [``algorithm``]は各solver, algorithmごとに定義します。
以下、順に説明します。

[``base``] セクション
************************

- ``dimension``

  形式: 整数型 (default: 2)

  説明: 探索空間の次元（探索するパラメータの数）

- ``output_dir``

  形式: string型 (default: プログラム実行時のディレクトリ)

  説明: プログラムの実行結果を出力するディレクトリ名

[``solver``] セクション
************************

``name`` でソルバーの種類を決定します。各パラメータはソルバーごとに定義されています。

- ``name``

  形式: string型

  説明: ソルバーの名前。以下のソルバーが用意されています。

    - ``surf`` : 反射高速(陽)電子回折(RHEED, TRHEPD)の強度計算をするためのソルバー

    - ``analytic`` : 解析解を与えるソルバー (主にテストに利用)

以下、ソルバーごとに定義されているパラメータを記載します。

``surf`` で定義されているパラメータ
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[``config``] セクション
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

- ``surface_input_file``

  形式: string型 (default: "surf.txt")

  説明: 表面構造のインプットファイル。

- ``bulk_output_file``

  形式: string型 (default: "bulkP.b")

  説明: バルク構造のアウトプットファイル。

- ``surface_output_file``

  形式: string型 (default: "surf-bulkP.s")

  説明: 表面構造のアウトプットファイル。

- ``calculated_first_line``

  形式: 整数型 (default: 5)

  説明: ソルバーにより計算された出力ファイルを読み込む範囲を指定するパラメータ。読み込む最初の行を指定。

- ``calculated_last_line``

  形式: 整数型 (default: 60)

  説明: ソルバーにより計算された出力ファイルを読み込む範囲を指定するパラメータ。読み込む最後の行を指定。

- ``row_number``

  形式: 整数型 (default: 8)

  説明: ソルバーにより計算された出力ファイルを読み込む範囲を指定するパラメータ。読み込む列を指定。

[``post``] セクション
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

- ``normalization``

  形式: string型。"TOTAL"または"MAX"のいずれかをとります。 (default: "TOTAL")

  説明: R値の規格化の方法。全体の和で規格化するか最大値で規格化するかを指定します。

- ``Rfactor_type``

  形式: string型。"A"または"B"のいずれかをとります。 (default: "A")

  説明: Rファクターの計算方法の指定。"A"だと通常の方法、"B"だとPendryのRファクターを計算します。

- ``omega``

  形式: 実数型 (default: 0.5)

  説明: コンボリューションの半値幅の指定。


[``param``] セクション
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

- ``string_list``

  形式: string型のリスト。長さはdimensionの値と一致させます。 (default: ["value_01", "value_02"])

  説明: ソルバーの入力ファイルを作成するための参照用テンプレートファイルで利用するプレースホルダーのリスト。これらの文字列が探索中のパラメータの値に置換されます。

- ``degree_max``

  形式: 実数型 (default: 6.0)

  説明: 最大角度（度単位）の指定

[``reference``] セクション
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

- ``path``

  形式: string型 (default: ``experiment.txt``)

  説明: 実験データファイルへのパス。
  
- ``first``

  形式: 整数型 (default: 1)

  説明: 実験データファイルを読み込む範囲を指定するパラメータ。実験ファイルを読み込む最初の行を指定。

- ``last``

  形式: 整数型 (default: 56)

  説明: 実験データファイルを読み込む範囲を指定するパラメータ。実験ファイルを読み込む最後の行を指定。

``analytic`` で定義されているパラメータ
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- ``function_name``

  形式: string型

  説明: 関数名。以下の関数が選べます。

   - xxxxxx


[``algorithm``] セクション
*******************************

``name`` でアルゴリズムの種類を決定します。各パラメータはアルゴリズムごとに定義されています。

- ``name``

  形式: string型

  説明: アルゴリズムの名前。以下のアルゴリズムが用意されています。

    - ``minsearch`` : Nelder-Mead法を用いて最小値を与えるパラメータを探索するアルゴリズム

    - ``mapper`` :　グリッド探索を行うアルゴリズム

    - ``exchange`` :  レプリカ交換モンテカルロを行うアルゴリズム

以下、アルゴリズムごとに定義されているパラメータを記載します。


``minsearch`` で定義されているパラメータ
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[``param``] セクション
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

探索空間が3次元であることを仮定してデフォルトの数値が設定されています。

- ``initial_list``

  形式: 実数型のリスト。長さはdimensionの値と一致させます。 (default: [5.25,4.25,3.50] )

  説明: 初期値のリスト。

- ``unit_list``

  形式: 実数型のリスト。長さはdimensionの値と一致させます。 (default: [1.0, 1.0, 1.0] )

  説明: 各パラメータの単位を指定するリスト。探索アルゴリズム中では、各パラメータをそれぞれこれらの値で割ることで、簡易的な無次元化・正規化を行います。

- ``minlist``

  形式: 実数型のリスト。長さはdimensionの値と一致させます。(default: [-10.0, -10.0])

  説明: パラメータが取りうる最小値のリスト。

- ``maxlist``

  形式: 実数型のリスト。長さはdimensionの値と一致させます。(default: [10.0, 10.0])

  説明: パラメータが取りうる最大値のリスト。  

- ``initial_scale_list``


- ``xtol``

    形式: 実数型 (default: 1e-4)


- ``ftol``

    形式: 実数型 (default: 1e-4)


``mapper_mpi`` で定義されているパラメータ
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[``param``] セクション
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

- ``mesh_path``

  形式: string型 (default: ``MeshData.txt`` )

  説明: メッシュデータの情報が記載された参照用ファイルへのパス。


``exchange`` で定義されているパラメータ
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[``param``] セクション
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

- ``initial_list``

  形式: 実数型のリスト。長さはdimensionの値と一致させます。 (default: [5.25,4.25,3.50] )

  説明: 初期値のリスト。

- ``unit_list``

  形式: 実数型のリスト。長さはdimensionの値と一致させます。 (default: [1.0, 1.0, 1.0] )

  説明: 各パラメータの単位を指定するリスト。
        探索アルゴリズム中では、各パラメータをそれぞれこれらの値で割ることで、
        簡易的な無次元化・正規化を行います。

- ``minlist``

  形式: 実数型のリスト。長さはdimensionの値と一致させます。(default: [-10.0, -10.0])

  説明: パラメータが取りうる最小値のリスト。

- ``maxlist``

  形式: 実数型のリスト。長さはdimensionの値と一致させます。(default: [10.0, 10.0])

  説明: パラメータが取りうる最大値のリスト。  

- ``numstep``

  形式: 整数値。

  説明: モンテカルロ更新を行う回数。

- ``numstep_exchange``

  形式: 整数値。

  説明: 「温度」のレプリカ交換を行う頻度。この回数だけモンテカルロ更新を行ったらレプリカ交換を実行します。

- ``Tmin``

  形式: 実数値。 (default: 0.1)

  説明: 「温度」の最小値。

- ``Tmax``

  形式: 実数値。 (default: 10.0)

  説明: 「温度」の最大値。

- ``Tlogspace``

  形式: 真偽値。 (default: true)

  説明: 「温度」を各レプリカに割り当てる際に、対数空間で等分割するか否かを指定します。
        true のときは対数空間で等分割します。

- ``seed``

  形式: 整数値。

  説明: モンテカルロ更新で用いる擬似乱数生成器の種を指定します。
        各MPIプロセスに対して、 ``seed + mpi_rank * seed_delta`` の値が実際の種として用いられます。
        省略した場合は `Numpy の規定の方法 <https://numpy.org/doc/stable/reference/random/generator.html#numpy.random.default_rng>`_ で初期化されます。


- ``seed_delta``

  形式: 整数値。 (default: 314159)

  説明: 疑似乱数生成器の種について、MPI プロセスごとの値を計算する際に用いられます。
        詳しくは ``seed`` を参照してください。

参照ファイル
=====================

ソルバー、アルゴリズムごとに参照するファイルについて記載します。

ソルバーで参照するファイル
******************************

``surf`` で参照するファイル
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

テンプレートを定義するファイル
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
テンプレートを定義するファイル ``template.txt`` は ``surf.exe`` の入力ファイルをもとに作成するファイルです。
動かすパラメータ（求めたい原子座標などの値）を「 ``value_*`` 」などの適当な文字列に置き換えます。
使用する文字列は入力ファイルの ``[solver]`` - ``[param]`` セクションにある、
``string_list`` で指定します。
以下、テンプレートの例を記載します。

.. code-block::

    2                                    ,NELMS,  -------- Ge(001)-c4x2
    32,1.0,0.1                           ,Ge Z,da1,sap
    0.6,0.6,0.6                          ,BH(I),BK(I),BZ(I)
    32,1.0,0.1                           ,Ge Z,da1,sap
    0.4,0.4,0.4                          ,BH(I),BK(I),BZ(I)
    9,4,0,0,2, 2.0,-0.5,0.5               ,NSGS,msa,msb,nsa,nsb,dthick,DXS,DYS
    8                                    ,NATM
    1, 1.0, 1.34502591	1	value_01   ,IELM(I),ocr(I),X(I),Y(I),Z(I)
    1, 1.0, 0.752457792	1	value_02
    2, 1.0, 1.480003343	1.465005851	value_03
    2, 1.0, 2	1.497500418	2.281675
    2, 1.0, 1	1.5	1.991675
    2, 1.0, 0	1	0.847225
    2, 1.0, 2	1	0.807225
    2, 1.0, 1.009998328	1	0.597225
    1,1                                  ,(WDOM,I=1,NDOM)


この場合、 ``value_01``, ``value_02``, ``value_03`` が動かすパラメータとなります。


ターゲットを定義するファイル
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

ターゲットにするデータが格納されたファイル ``experiment.txt`` を指定します。
第一列に角度、第二列に反射強度に重みをかけて計算した値が入ってます。
以下、ファイルの例を指定します。

.. code-block::

    0.100000 0.002374995
    0.200000 0.003614789
    0.300000 0.005023215
    0.400000 0.006504978
    0.500000 0.007990674
    0.600000 0.009441623
    0.700000 0.010839445
    0.800000 0.012174578
    0.900000 0.013439485
    1.000000 0.014625579
    ...


アルゴリズムで参照するファイル
******************************

``mapper`` で参照するファイル
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

メッシュを定義するファイル
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

本ファイルで探索するグリッド空間を定義します。
1列目にメッシュのインデックス、
2列目以降は``[solver]`` - ``[param]`` セクションにある、
``string_list`` で定義された変数に入る値が入ります。

以下、サンプルを記載します。

.. code-block::

    1 6.000000 6.000000
    2 6.000000 5.750000
    3 6.000000 5.500000
    4 6.000000 5.250000
    5 6.000000 5.000000
    6 6.000000 4.750000
    7 6.000000 4.500000
    8 6.000000 4.250000
    9 6.000000 4.000000
    ...
